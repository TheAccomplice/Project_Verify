import os
import re

def remove_chunks(text, chunks_to_remove):
    # Remove each unwanted chunk from the text by simple replacement
    for chunk in chunks_to_remove:
        text = text.replace(chunk, '')
    return text

def split_sentences_to_lines(text):
    # Protect ellipses from being split
    text = text.replace('...', '[ELLIPSIS]')

    # Match sentence endings
    pattern = r'([.!?]["\']?) +'
    
    # Use re.split with a capturing group to keep the punctuation
    parts = re.split(pattern, text)

    # Reconstruct sentences from split parts
    sentences = []
    for i in range(0, len(parts) - 1, 2):
        sentence = parts[i] + parts[i + 1]
        sentences.append(sentence.strip())

    # Handle any trailing text after the last punctuation
    if len(parts) % 2 == 1:
        sentences.append(parts[-1].strip())

    # Restore ellipses and clean up
    lines = [s.replace('[ELLIPSIS]', '...').rstrip() for s in sentences if s.strip() != '']
    return '\n'.join(lines)

def clean_files(folder_path, chunks_to_remove):
    # Loop through every file in folder
    for filename in os.listdir(folder_path):
        
        # Process only .txt files that do NOT have '[Cleaned]' in the filename
        if filename.endswith('.txt') and '[Cleaned]' not in filename:
            full_path = os.path.join(folder_path, filename)
            
            # Open and read the file content
            with open(full_path, 'r', encoding='utf-8') as file:
                content = file.read()

            # Remove unwanted chunks from the content
            cleaned_content = remove_chunks(content, chunks_to_remove)

            # Put each sentence on its own line and strip trailing whitespace
            cleaned_content = split_sentences_to_lines(cleaned_content)

            # Overwrite the original file with cleaned content
            with open(full_path, 'w', encoding='utf-8') as file:
                file.write(cleaned_content)

            # Prepare new filename by adding '[Cleaned]' before the file extension
            base_name, ext = os.path.splitext(filename)
            new_filename = base_name + '[Cleaned]' + ext
            new_full_path = os.path.join(folder_path, new_filename)

            # Rename the original file to the new cleaned filename
            os.rename(full_path, new_full_path)

            print(f"Cleaned and renamed: {filename} -> {new_filename}")


folder = './Articles'

# List exaof exact text chunks to be removed
chunks_to_remove = [
    "This audio is generated by an AI tool.",
    "Get our pick of top stories and thought-provoking articles in your inbox",
    "Stay updated with notifications for breaking news and our best stories",
    "Get WhatsApp alerts",
    "Join our channel for the top reads for the day on your preferred chat app",
]

# Run the cleaning function
clean_files(folder, chunks_to_remove)
